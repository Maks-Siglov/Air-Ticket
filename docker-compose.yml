services:
  app:
    build: .
    user: ${CURRENT_UID}
    container_name: air_ticket
    restart: always
    ports:
      - "127.0.0.1:9080:8000"
    volumes:
      - ./air_ticket:/app
    env_file:
      - .env.docker
    command: [
      "sh", "-c", "python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      python manage.py loaddata fixtures/*.json &&
      python manage.py runserver 0.0.0.0:8000"
    ]
    depends_on:
      - db
    networks:
      - mynetwork

  db:
    image: postgres:16.2
    container_name: postgres_air_ticket
    restart: always
    env_file:
      - .env.docker_db
    environment:
      - DB_HOST=postgres_air_ticket
      - POSTGRES_DB=air_ticket
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    container_name: nginx_air_ticket
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
      - ./nginx/logs:/var/log/nginx
    ports:
      - "8080:1370"
    depends_on:
      - app
    networks:
      - mynetwork

networks:
  mynetwork:
    external: True
    name: mynetwork

volumes:
  postgres-db-volume:
